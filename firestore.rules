rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      // In a real app, you'd have a 'roles' collection or custom claims.
      // For this demo, we'll hardcode the admin's email.
      return request.auth != null && request.auth.token.email == 'harshsharmaqa@gmail.com';
    }

    // USERS:
    // - Anyone can read user profiles.
    // - Authenticated users can create their own user document.
    // - Only the user themselves can update their document.
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      // Deleting users should be handled carefully, maybe only by admins.
      allow delete: if isAdmin();
    }
    
    // CONTENT (Blogs, Pages, Settings, Testimonials, Courses):
    // - Anyone can read.
    // - Only admins can write (create, update, delete).
    match /{collection}/{docId} 
      where collection in ['blogs', 'pages', 'settings', 'testimonials', 'courses'] {
      allow read;
      allow write: if isAdmin();
    }

    // ENROLLMENTS:
    // - Anyone can create an enrollment document (for the public form).
    // - Only admins can read or delete enrollment records.
    match /courses/{courseId}/enrollments/{enrollmentId} {
        allow create;
        allow read, delete: if isAdmin();
    }
  }
}
