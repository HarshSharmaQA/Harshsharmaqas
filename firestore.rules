rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can read their own data. Admins can read any user data.
    // Users can create their own user document.
    // Users can update their own data, but not their role. Admins can update anything.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && 
                       ( (request.auth.uid == userId && request.resource.data.role == resource.data.role) || isAdmin() );
      allow delete: if isAdmin();
    }

    // Anyone can read blog posts. Only admins can write/delete them.
    match /blogs/{blogId} {
      allow read: if true;
      allow write, delete: if isAdmin();

      // Authenticated users can like/unlike a post.
      match /likes/{userId} {
        allow read: if true;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Anyone can read courses. Only admins can write/delete them.
    match /courses/{courseId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }
    
    // Anyone can read testimonials. Only admins can write/delete them.
    match /testimonials/{testimonialId} {
        allow read: if true;
        allow write, delete: if isAdmin();
    }

    // Anyone can read pages. Only admins can write/delete them.
    match /pages/{pageId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }

    // Anyone can read site settings. Only admins can write them.
    match /settings/site {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}
