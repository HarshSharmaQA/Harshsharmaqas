rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUser(uid) {
      return request.auth != null && request.auth.uid == uid;
    }

    // Use email check for list operations to avoid disallowed get() calls.
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'harshsharmaqa@gmail.com';
    }

    match /users/{uid} {
      allow create: if request.auth != null;
      // isAdmin() for list, isUser for individual read
      allow list: if isAdmin();
      allow read, update: if isUser(uid) || isAdmin(); 
      allow delete: if isAdmin();
    }

    match /courses/{courseId} {
      allow read, list: if true;
      allow create, update, delete: if isAdmin();
    }

    match /blogs/{blogId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();

      match /likes/{userId} {
        allow read, create, delete: if request.auth != null;
      }
    }

    match /pages/{pageId} {
      allow read: if resource.data.status == 'published' || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /testimonials/{testimonialId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
    
    match /settings/site {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
