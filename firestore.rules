rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // The admin's email is hardcoded for simplicity.
      // In a real-world application, consider a more robust role-based access control system.
      return request.auth != null && request.auth.token.email == 'harshsharmaqa@gmail.com';
    }

    match /users/{userId} {
      // Any authenticated user can create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can only read or update their own document.
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Only admins can delete user documents.
      allow delete: if isAdmin();
    }
    
    // Admins can read all user data for administrative purposes.
    match /users/{userId} {
      allow list, get: if isAdmin();
    }

    match /courses/{courseId} {
      allow read: true;
      // Write access (create, update, delete) is restricted to admins.
      allow write: if isAdmin();

      match /enrollments/{enrollmentId} {
        // Anyone can create an enrollment document.
        allow create: true;
        // Only admins can read or delete enrollments.
        allow read, list, delete: if isAdmin();
        // Disallow updates to enrollments to maintain data integrity.
        allow update: if false;
      }
    }

    // Default deny for all other collections.
    // Public read access for blogs, pages, settings, and testimonials.
    match /blogs/{document=**} {
      allow read: true;
      allow write: if isAdmin();
    }
    match /pages/{document=**} {
      allow read: true;
      allow write: if isAdmin();
    }
    match /settings/{document=**} {
      allow read: true;
      allow write: if isAdmin();
    }
     match /testimonials/{document=**} {
      allow read: true;
      allow write: if isAdmin();
    }
  }
}
