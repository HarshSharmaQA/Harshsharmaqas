rules_version = '2';

// The admin UID. All admin actions will be checked against this UID.
function adminUid() {
  return "7YCygdl3aITdlmgRHqBrZCzuWcj1";
}

function isAuth() {
  return request.auth != null;
}

function isUser(uid) {
  return isAuth() && request.auth.uid == uid;
}

function isAdmin() {
  return isAuth() && request.auth.uid == adminUid();
}

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{uid} {
      allow list: if request.auth != null && request.auth.uid == '7YCygdl3aITdlmgRHqBrZCzuWcj1';
      allow read: if isUser(uid) || isAdmin();
      allow create: if isAuth(); 
      allow update: if (isUser(uid) && !('role' in request.resource.data)) || isAdmin();
      allow delete: if isAdmin();
    }

    match /blogs/{blogId} {
      allow read: if true;
      allow write: if isAdmin();

      match /likes/{userId} {
        allow create, delete: if isAuth() && request.auth.uid == userId;
        allow read, list, update: if false; 
      }
    }

    match /courses/{courseId} {
      allow read: if true;
      allow list: if request.auth != null && request.auth.uid == '7YCygdl3aITdlmgRHqBrZCzuWcj1';
      allow write: if isAdmin();
    }
    
    match /pages/{pageId} {
       allow read: if true;
       allow write: if isAdmin();
    }

    match /testimonials/{testimonialId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /settings/site {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
