rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // An admin can be the hardcoded email, a user with the 'admin' role, or the hardcoded UID.
      return request.auth.token.email == 'harshsharmaqa@gmail.com' ||
             request.auth.uid == '7YCygdl3aITdlmgRHqBrZCzuWcj1' ||
             (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    match /blogs/{blogId} {
      allow read: if true;
      allow write: if isAdmin();

      match /likes/{userId} {
        allow read: if true;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /courses/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /testimonials/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /settings/{document=**} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    match /pages/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /users/{userId} {
       allow read, get: if request.auth.uid == userId || isAdmin();
       allow list: if isAdmin();
       allow write: if isAdmin();
       allow create: if request.auth.uid == userId;
    }
  }
}
